{"swagger":"2.0","info":{"description":"An open-source API for embedding those tough scientific computations in your application with ease. Scientific formulas and relationships have been developed and implemented, let's not repeat that work every time we want to create a science-based application! This is for researchers, educators and developers.","version":"1.0.0","title":"SCiAPI","contact":{"email":"marcusedwards@hotmail.ca"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"tags":[{"name":"developers","description":"Operations available to all developers"}],"schemes":["https"],"paths":{"/request/{Function_Name}":{"post":{"tags":["developers"],"summary":"request computation","operationId":"request","description":"By passing the name of a computational function in SCiAPI's database, you can retrieve the computational function and its associated visual widget.\n","produces":["application/json"],"parameters":[{"in":"path","name":"Function_Name","description":"Required to retrieve a function","required":true,"type":"string"},{"in":"body","name":"params","description":"API access key and parameters for computation.","schema":{"$ref":"#/definitions/paramsObject"}}],"responses":{"200":{"description":"computation object returned in response to successful request.","schema":{"$ref":"#/definitions/computationObject"}},"400":{"description":"The returned object will contain an explanation of the error in the bad request -- either bad post or query parameters.","schema":{"$ref":"#/definitions/computationObject"}},"401":{"description":"The returned object will contain a meassge explaining that the requested computation could not be found.","schema":{"$ref":"#/definitions/computationObject"}}}}}},"definitions":{"paramsObject":{"type":"object","required":["_api_key"],"properties":{"_api_key":{"type":"string","description":"Mandatory API key. API keys can be acquired through the site sciapi.herokuapp.com."},"param_name":{"type":"number","description":"Optional parameter values. Without parameters, we will give you the code to perform the operation. With parameters, we will also insert the parameters into the code."}}},"computationObject":{"type":"object","required":["status","message","widget","code"],"properties":{"status":{"type":"string","example":"success","description":"The status of the request."},"message":{"type":"string","example":"successfully requested function Acceleration","description":"Feedback from the API, including any errors and suggestions."},"widget":{"type":"string","description":"A rendered html widget containing the formula in text, JavaScript code, an associated Wolfram Alpha widget and a related photograph."},"code":{"type":"string","example":"function Acceleration(v_1,v_2,time){ var accel = (v_2 - v_1)/time; return accel; }","description":"The JavaScript code that performs the computation. The code will be populated with any parameters provided with the request."}}}},"host":"virtserver.swaggerhub.com","basePath":"/MackEdweise/SCiAPI/1.0.0"}